// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`failed peer dep 1`] = `
Object {
  "linux": Array [],
}
`;

exports[`ignore node_modules 1`] = `
Object {
  "linux": Array [],
}
`;

exports[`link 1`] = `
Object {
  "linux": Array [],
}
`;

exports[`link 2`] = `
Object {
  "link": "index.js",
}
`;

exports[`outside link 1`] = `
Object {
  "linux": Array [],
}
`;

exports[`outside link 2`] = `
Object {
  "offset": "5468",
  "size": 4,
}
`;

exports[`unpackDir 1`] = `
Object {
  "linux": Array [],
}
`;

exports[`unpackDir 2`] = `"BAAAABACAAAMAgAACAIAAHsiZmlsZXMiOnsiaW5kZXguaHRtbCI6eyJzaXplIjozNzgsIm9mZnNldCI6IjAifSwiaW5kZXguanMiOnsic2l6ZSI6NjE5LCJvZmZzZXQiOiIzNzgifSwicGFja2FnZS5qc29uIjp7InNpemUiOjIyNCwib2Zmc2V0IjoiOTk3In0sInBhdGgiOnsiZmlsZXMiOnsiYXBwLmFzYXIiOnsic2l6ZSI6NzE0LCJvZmZzZXQiOiIxMjIxIn19fSwiZG8tbm90LXVucGFjay1kaXIiOnsiZmlsZXMiOnsiZmlsZS5qc29uIjp7InNpemUiOjIsInVucGFja2VkIjp0cnVlfSwibXVzdC1iZS1ub3QtdW5wYWNrZWQiOnsic2l6ZSI6Miwib2Zmc2V0IjoiMTkzNSJ9LCJkaXItMiI6eyJmaWxlcyI6eyJkaXItMyI6eyJmaWxlcyI6eyJkaXItMyI6eyJmaWxlcyI6eyJmaWxlLWluLWFzYXIiOnsic2l6ZSI6Miwib2Zmc2V0IjoiMTkzNyJ9fX19fX19fX0sImIyIjp7ImZpbGVzIjp7ImZpbGUiOnsic2l6ZSI6NCwidW5wYWNrZWQiOnRydWV9fX0sImFzc2V0cyI6eyJmaWxlcyI6eyJmaWxlIjp7InNpemUiOjQsInVucGFja2VkIjp0cnVlfX19fX08IURPQ1RZUEUgaHRtbD4KPGh0bWw+CiAgPGhlYWQ+CiAgICA8bWV0YSBjaGFyc2V0PSJVVEYtOCI+CiAgICA8dGl0bGU+SGVsbG8gV29ybGQhPC90aXRsZT4KICA8L2hlYWQ+CiAgPGJvZHk+CiAgICA8aDE+SGVsbG8gV29ybGQhPC9oMT4KICAgIFdlIGFyZSB1c2luZyBub2RlIDxzY3JpcHQ+ZG9jdW1lbnQud3JpdGUocHJvY2Vzcy52ZXJzaW9ucy5ub2RlKTwvc2NyaXB0PiwKICAgIENocm9tZSA8c2NyaXB0PmRvY3VtZW50LndyaXRlKHByb2Nlc3MudmVyc2lvbnMuY2hyb21lKTwvc2NyaXB0PiwKICAgIGFuZCBFbGVjdHJvbiA8c2NyaXB0PmRvY3VtZW50LndyaXRlKHByb2Nlc3MudmVyc2lvbnMuZWxlY3Ryb24pPC9zY3JpcHQ+LgogIDwvYm9keT4KPC9odG1sPgoidXNlIHN0cmljdCIKCmNvbnN0IGVsZWN0cm9uID0gcmVxdWlyZSgnZWxlY3Ryb24nKQpjb25zdCBhcHAgPSBlbGVjdHJvbi5hcHAKY29uc3QgQnJvd3NlcldpbmRvdyA9IGVsZWN0cm9uLkJyb3dzZXJXaW5kb3cKCmxldCBtYWluV2luZG93CgpmdW5jdGlvbiBjcmVhdGVXaW5kb3cgKCkgewogIG1haW5XaW5kb3cgPSBuZXcgQnJvd3NlcldpbmRvdyh7d2lkdGg6IDgwMCwgaGVpZ2h0OiA2MDB9KQogIG1haW5XaW5kb3cubG9hZFVSTCgnZmlsZTovLycgKyBfX2Rpcm5hbWUgKyAnL2luZGV4Lmh0bWwnKQoKICBtYWluV2luZG93LndlYkNvbnRlbnRzLm9wZW5EZXZUb29scygpCgogIG1haW5XaW5kb3cub24oJ2Nsb3NlZCcsIGZ1bmN0aW9uKCkgewogICAgbWFpbldpbmRvdyA9IG51bGwKICB9KTsKfQoKYXBwLm9uKCdyZWFkeScsIGNyZWF0ZVdpbmRvdykKCmFwcC5vbignd2luZG93LWFsbC1jbG9zZWQnLCBmdW5jdGlvbiAoKSB7CiAgaWYgKHByb2Nlc3MucGxhdGZvcm0gIT09ICdkYXJ3aW4nKSB7CiAgICBhcHAucXVpdCgpCiAgfQp9KQoKYXBwLm9uKCdhY3RpdmF0ZScsIGZ1bmN0aW9uICgpIHsKICBpZiAobWFpbldpbmRvdyA9PT0gbnVsbCkgewogICAgY3JlYXRlV2luZG93KCkKICB9Cn0pewogICJwcml2YXRlIjogdHJ1ZSwKICAibmFtZSI6ICJUZXN0QXBwIiwKICAidmVyc2lvbiI6ICIxLjEuMCIsCiAgImRlc2NyaXB0aW9uIjogIlRlc3QgQXBwbGljYXRpb24gKHRlc3QgcXVpdGUgXCIgIzM3OCkiLAogICJhdXRob3IiOiAiRm9vIEJhciA8Zm9vQGV4YW1wbGUuY29tPiIsCiAgImxpY2Vuc2UiOiAiTUlUIiwKICAiaG9tZXBhZ2UiOiAiaHR0cDovL2Zvby5leGFtcGxlLmNvbSIKfQoEAAAAOAAAADQAAAAwAAAAeyJmaWxlcyI6eyJpbmRleC5qcyI6eyJzaXplIjo2NTAsIm9mZnNldCI6IjAifX19InVzZSBzdHJpY3QiDQoNCmNvbnN0IGVsZWN0cm9uID0gcmVxdWlyZSgnZWxlY3Ryb24nKQ0KY29uc3QgYXBwID0gZWxlY3Ryb24uYXBwDQpjb25zdCBCcm93c2VyV2luZG93ID0gZWxlY3Ryb24uQnJvd3NlcldpbmRvdw0KDQpsZXQgbWFpbldpbmRvdw0KDQpmdW5jdGlvbiBjcmVhdGVXaW5kb3cgKCkgew0KICBtYWluV2luZG93ID0gbmV3IEJyb3dzZXJXaW5kb3coe3dpZHRoOiA4MDAsIGhlaWdodDogNjAwfSkNCiAgbWFpbldpbmRvdy5sb2FkVVJMKCdmaWxlOi8vJyArIF9fZGlybmFtZSArICcvaW5kZXguaHRtbCcpDQoNCiAgbWFpbldpbmRvdy53ZWJDb250ZW50cy5vcGVuRGV2VG9vbHMoKQ0KDQogIG1haW5XaW5kb3cub24oJ2Nsb3NlZCcsIGZ1bmN0aW9uKCkgew0KICAgIG1haW5XaW5kb3cgPSBudWxsDQogIH0pOw0KfQ0KDQphcHAub24oJ3JlYWR5JywgY3JlYXRlV2luZG93KQ0KDQphcHAub24oJ3dpbmRvdy1hbGwtY2xvc2VkJywgZnVuY3Rpb24gKCkgew0KICBpZiAocHJvY2Vzcy5wbGF0Zm9ybSAhPT0gJ2RhcndpbicpIHsNCiAgICBhcHAucXVpdCgpDQogIH0NCn0pDQoNCmFwcC5vbignYWN0aXZhdGUnLCBmdW5jdGlvbiAoKSB7DQogIGlmIChtYWluV2luZG93ID09PSBudWxsKSB7DQogICAgY3JlYXRlV2luZG93KCkNCiAgfQ0KfSl7fXt9"`;

exports[`unpackDir one 1`] = `
Object {
  "linux": Array [],
}
`;

exports[`unpackDir one 2`] = `"BAAAAFQCAABQAgAATAIAAHsiZmlsZXMiOnsiaW5kZXguaHRtbCI6eyJzaXplIjo4NDEsIm9mZnNldCI6IjAifSwiaW5kZXguanMiOnsic2l6ZSI6NDM3MSwib2Zmc2V0IjoiODQxIn0sInBhY2thZ2UuanNvbiI6eyJzaXplIjoyNTYsIm9mZnNldCI6IjUyMTIifSwiZG8tbm90LXVucGFjay1kaXIiOnsiZmlsZXMiOnsiZmlsZS5qc29uIjp7InNpemUiOjIsInVucGFja2VkIjp0cnVlfSwibXVzdC1iZS1ub3QtdW5wYWNrZWQiOnsic2l6ZSI6Miwib2Zmc2V0IjoiNTQ2OCJ9LCJkaXItMiI6eyJmaWxlcyI6eyJkaXItMyI6eyJmaWxlcyI6eyJkaXItMyI6eyJmaWxlcyI6eyJmaWxlLWluLWFzYXIiOnsic2l6ZSI6Miwib2Zmc2V0IjoiNTQ3MCJ9fX19fX19fX0sImIyIjp7ImZpbGVzIjp7ImZpbGUiOnsic2l6ZSI6NCwidW5wYWNrZWQiOnRydWV9fX0sImFzc2V0cyI6eyJmaWxlcyI6eyJmaWxlIjp7InNpemUiOjQsInVucGFja2VkIjp0cnVlfX19LCJhcHAiOnsiZmlsZXMiOnsicmVhZG1lLm1kIjp7InNpemUiOjc4LCJvZmZzZXQiOiI1NDcyIn0sInBhY2thZ2UuanNvbiI6eyJmaWxlcyI6eyJyZWFkbWUubWQiOnsic2l6ZSI6MzIsIm9mZnNldCI6IjU1NTAifX19fX19fTwhRE9DVFlQRSBodG1sPgo8aHRtbD4KICA8aGVhZD4KICAgIDxtZXRhIGNoYXJzZXQ9IlVURi04Ij4KICAgIDx0aXRsZT5IZWxsbyBXb3JsZCE8L3RpdGxlPgogICAgPHNjcmlwdD4KICAgICAgY29uc3Qge2lwY1JlbmRlcmVyfSA9IHJlcXVpcmUoImVsZWN0cm9uIikKICAgICAgZnVuY3Rpb24gc2F2ZUFwcERhdGEoKSB7CiAgICAgICAgaXBjUmVuZGVyZXIuc2VuZCgic2F2ZUFwcERhdGEiKQogICAgICB9CiAgICA8L3NjcmlwdD4KICA8L2hlYWQ+CiAgPGJvZHk+CiAgICA8aDE+SGVsbG8gV29ybGQhPC9oMT4KICAgIFdlIGFyZSB1c2luZyBub2RlIDxzY3JpcHQ+ZG9jdW1lbnQud3JpdGUocHJvY2Vzcy52ZXJzaW9ucy5ub2RlKTwvc2NyaXB0PiwKICAgIENocm9tZSA8c2NyaXB0PmRvY3VtZW50LndyaXRlKHByb2Nlc3MudmVyc2lvbnMuY2hyb21lKTwvc2NyaXB0PiwKICAgIGFuZCBFbGVjdHJvbiA8c2NyaXB0PmRvY3VtZW50LndyaXRlKHByb2Nlc3MudmVyc2lvbnMuZWxlY3Ryb24pPC9zY3JpcHQ+LgoKICAgIEFyZ3M6IDxzY3JpcHQ+ZG9jdW1lbnQud3JpdGUoIjxicj48YnI+PHByZT4iICsgSlNPTi5zdHJpbmdpZnkocmVxdWlyZSgiZWxlY3Ryb24iKS5yZW1vdGUucHJvY2Vzcy5hcmd2LCBudWxsLCAyKSArICI8L3ByZT4iKTwvc2NyaXB0Pi4KCiAgICBFbnY6IDxzY3JpcHQ+ZG9jdW1lbnQud3JpdGUoIjxicj48YnI+PHByZT4iICsgSlNPTi5zdHJpbmdpZnkocHJvY2Vzcy5lbnYsIG51bGwsIDIpICsgIjwvcHJlPiIpPC9zY3JpcHQ+LgoKICAgIDxidXR0b24gb25jbGljaz0ic2F2ZUFwcERhdGEoKSI+U2F2ZSBhcHAgZGF0YTwvYnV0dG9uPgogIDwvYm9keT4KPC9odG1sPgondXNlIHN0cmljdCcKCmNvbnN0IHsgYXBwLCBpcGNNYWluLCBCcm93c2VyV2luZG93LCBNZW51LCBUcmF5IH0gPSByZXF1aXJlKCJlbGVjdHJvbiIpCmNvbnN0IGZzID0gcmVxdWlyZSgiZnMiKQpjb25zdCBwYXRoID0gcmVxdWlyZSgicGF0aCIpCgovLyB0aGlzIHNob3VsZCBiZSBwbGFjZWQgYXQgdG9wIG9mIG1haW4uanMgdG8gaGFuZGxlIHNldHVwIGV2ZW50cyBxdWlja2x5CmlmIChoYW5kbGVTcXVpcnJlbEV2ZW50KCkpIHsKICAvLyBzcXVpcnJlbCBldmVudCBoYW5kbGVkIGFuZCBhcHAgd2lsbCBleGl0IGluIDEwMDBtcywgc28gZG9uJ3QgZG8gYW55dGhpbmcgZWxzZQogIHJldHVybjsKfQoKZnVuY3Rpb24gaGFuZGxlU3F1aXJyZWxFdmVudCgpIHsKICBpZiAocHJvY2Vzcy5hcmd2Lmxlbmd0aCA9PT0gMSkgewogICAgcmV0dXJuIGZhbHNlOwogIH0KCiAgY29uc3QgQ2hpbGRQcm9jZXNzID0gcmVxdWlyZSgnY2hpbGRfcHJvY2VzcycpOwoKICBjb25zdCBhcHBGb2xkZXIgPSBwYXRoLnJlc29sdmUocHJvY2Vzcy5leGVjUGF0aCwgJy4uJyk7CiAgY29uc3Qgcm9vdEF0b21Gb2xkZXIgPSBwYXRoLnJlc29sdmUoYXBwRm9sZGVyLCAnLi4nKTsKICBjb25zdCB1cGRhdGVEb3RFeGUgPSBwYXRoLnJlc29sdmUocGF0aC5qb2luKHJvb3RBdG9tRm9sZGVyLCAnVXBkYXRlLmV4ZScpKTsKICBjb25zdCBleGVOYW1lID0gcGF0aC5iYXNlbmFtZShwcm9jZXNzLmV4ZWNQYXRoKTsKCiAgY29uc3Qgc3Bhd24gPSBmdW5jdGlvbihjb21tYW5kLCBhcmdzKSB7CiAgICBsZXQgc3Bhd25lZFByb2Nlc3MsIGVycm9yOwoKICAgIHRyeSB7CiAgICAgIHNwYXduZWRQcm9jZXNzID0gQ2hpbGRQcm9jZXNzLnNwYXduKGNvbW1hbmQsIGFyZ3MsIHtkZXRhY2hlZDogdHJ1ZX0pOwogICAgfSBjYXRjaCAoZXJyb3IpIHt9CgogICAgcmV0dXJuIHNwYXduZWRQcm9jZXNzOwogIH07CgogIGNvbnN0IHNwYXduVXBkYXRlID0gZnVuY3Rpb24oYXJncykgewogICAgcmV0dXJuIHNwYXduKHVwZGF0ZURvdEV4ZSwgYXJncyk7CiAgfTsKCiAgY29uc3Qgc3F1aXJyZWxFdmVudCA9IHByb2Nlc3MuYXJndlsxXTsKICBzd2l0Y2ggKHNxdWlycmVsRXZlbnQpIHsKICAgIGNhc2UgJy0tc3F1aXJyZWwtaW5zdGFsbCc6CiAgICBjYXNlICctLXNxdWlycmVsLXVwZGF0ZWQnOgogICAgICAvLyBPcHRpb25hbGx5IGRvIHRoaW5ncyBzdWNoIGFzOgogICAgICAvLyAtIEFkZCB5b3VyIC5leGUgdG8gdGhlIFBBVEgKICAgICAgLy8gLSBXcml0ZSB0byB0aGUgcmVnaXN0cnkgZm9yIHRoaW5ncyBsaWtlIGZpbGUgYXNzb2NpYXRpb25zIGFuZAogICAgICAvLyAgIGV4cGxvcmVyIGNvbnRleHQgbWVudXMKCiAgICAgIC8vIEluc3RhbGwgZGVza3RvcCBhbmQgc3RhcnQgbWVudSBzaG9ydGN1dHMKICAgICAgc3Bhd25VcGRhdGUoWyctLWNyZWF0ZVNob3J0Y3V0JywgZXhlTmFtZV0pOwoKICAgICAgc2V0VGltZW91dChhcHAucXVpdCwgMTAwMCk7CiAgICAgIHJldHVybiB0cnVlOwoKICAgIGNhc2UgJy0tc3F1aXJyZWwtdW5pbnN0YWxsJzoKICAgICAgLy8gVW5kbyBhbnl0aGluZyB5b3UgZGlkIGluIHRoZSAtLXNxdWlycmVsLWluc3RhbGwgYW5kCiAgICAgIC8vIC0tc3F1aXJyZWwtdXBkYXRlZCBoYW5kbGVycwoKICAgICAgLy8gUmVtb3ZlIGRlc2t0b3AgYW5kIHN0YXJ0IG1lbnUgc2hvcnRjdXRzCiAgICAgIHNwYXduVXBkYXRlKFsnLS1yZW1vdmVTaG9ydGN1dCcsIGV4ZU5hbWVdKTsKCiAgICAgIHNldFRpbWVvdXQoYXBwLnF1aXQsIDEwMDApOwogICAgICByZXR1cm4gdHJ1ZTsKCiAgICBjYXNlICctLXNxdWlycmVsLW9ic29sZXRlJzoKICAgICAgLy8gVGhpcyBpcyBjYWxsZWQgb24gdGhlIG91dGdvaW5nIHZlcnNpb24gb2YgeW91ciBhcHAgYmVmb3JlCiAgICAgIC8vIHdlIHVwZGF0ZSB0byB0aGUgbmV3IHZlcnNpb24gLSBpdCdzIHRoZSBvcHBvc2l0ZSBvZgogICAgICAvLyAtLXNxdWlycmVsLXVwZGF0ZWQKCiAgICAgIGFwcC5xdWl0KCk7CiAgICAgIHJldHVybiB0cnVlOwogIH0KfQoKLy8gTW9kdWxlIHRvIGNvbnRyb2wgYXBwbGljYXRpb24gbGlmZS4KLy8gTW9kdWxlIHRvIGNyZWF0ZSBuYXRpdmUgYnJvd3NlciB3aW5kb3cuCgovLyBLZWVwIGEgZ2xvYmFsIHJlZmVyZW5jZSBvZiB0aGUgd2luZG93IG9iamVjdCwgaWYgeW91IGRvbid0LCB0aGUgd2luZG93IHdpbGwKLy8gYmUgY2xvc2VkIGF1dG9tYXRpY2FsbHkgd2hlbiB0aGUgSmF2YVNjcmlwdCBvYmplY3QgaXMgZ2FyYmFnZSBjb2xsZWN0ZWQuCmxldCBtYWluV2luZG93OwoKbGV0IHRyYXkgPSBudWxsCgpmdW5jdGlvbiBjcmVhdGVXaW5kb3cgKCkgewogIGlmIChwcm9jZXNzLnBsYXRmb3JtID09PSAibGludXgiICYmIHByb2Nlc3MuZW52LkFQUERJUiAhPSBudWxsKSB7CiAgICB0cmF5ID0gbmV3IFRyYXkocGF0aC5qb2luKHByb2Nlc3MuZW52LkFQUERJUiwgInRlc3RhcHAucG5nIikpCiAgICBjb25zdCBjb250ZXh0TWVudSA9IE1lbnUuYnVpbGRGcm9tVGVtcGxhdGUoWwogICAgICB7bGFiZWw6ICdJdGVtMScsIHR5cGU6ICdyYWRpbyd9LAogICAgICB7bGFiZWw6ICdJdGVtMicsIHR5cGU6ICdyYWRpbyd9LAogICAgICB7bGFiZWw6ICdJdGVtMycsIHR5cGU6ICdyYWRpbycsIGNoZWNrZWQ6IHRydWV9LAogICAgICB7bGFiZWw6ICdJdGVtNCcsIHR5cGU6ICdyYWRpbyd9CiAgICBdKQogICAgdHJheS5zZXRUb29sVGlwKCdUaGlzIGlzIG15IGFwcGxpY2F0aW9uLicpCiAgICB0cmF5LnNldENvbnRleHRNZW51KGNvbnRleHRNZW51KQogIH0KCiAgLy8gQ3JlYXRlIHRoZSBicm93c2VyIHdpbmRvdy4KICBtYWluV2luZG93ID0gbmV3IEJyb3dzZXJXaW5kb3coe3dpZHRoOiA4MDAsIGhlaWdodDogNjAwfSk7CgogIC8vIGFuZCBsb2FkIHRoZSBpbmRleC5odG1sIG9mIHRoZSBhcHAuCiAgbWFpbldpbmRvdy5sb2FkVVJMKCdmaWxlOi8vJyArIF9fZGlybmFtZSArICcvaW5kZXguaHRtbCcpOwoKICAvLyBPcGVuIHRoZSBEZXZUb29scy4KICBtYWluV2luZG93LndlYkNvbnRlbnRzLm9wZW5EZXZUb29scygpOwoKICBtYWluV2luZG93LndlYkNvbnRlbnRzLmV4ZWN1dGVKYXZhU2NyaXB0KGBjb25zb2xlLmxvZygiYXBwRGF0YTogJHthcHAuZ2V0UGF0aCgiYXBwRGF0YSIpLnJlcGxhY2UoL1xcL2csICJcXFxcIil9IilgKQogIG1haW5XaW5kb3cud2ViQ29udGVudHMuZXhlY3V0ZUphdmFTY3JpcHQoYGNvbnNvbGUubG9nKCJ1c2VyRGF0YTogJHthcHAuZ2V0UGF0aCgidXNlckRhdGEiKS5yZXBsYWNlKC9cXC9nLCAiXFxcXCIpfSIpYCkKCiAgLy8gRW1pdHRlZCB3aGVuIHRoZSB3aW5kb3cgaXMgY2xvc2VkLgogIG1haW5XaW5kb3cub24oJ2Nsb3NlZCcsIGZ1bmN0aW9uKCkgewogICAgLy8gRGVyZWZlcmVuY2UgdGhlIHdpbmRvdyBvYmplY3QsIHVzdWFsbHkgeW91IHdvdWxkIHN0b3JlIHdpbmRvd3MKICAgIC8vIGluIGFuIGFycmF5IGlmIHlvdXIgYXBwIHN1cHBvcnRzIG11bHRpIHdpbmRvd3MsIHRoaXMgaXMgdGhlIHRpbWUKICAgIC8vIHdoZW4geW91IHNob3VsZCBkZWxldGUgdGhlIGNvcnJlc3BvbmRpbmcgZWxlbWVudC4KICAgIG1haW5XaW5kb3cgPSBudWxsOwogIH0pOwp9CgovLyBUaGlzIG1ldGhvZCB3aWxsIGJlIGNhbGxlZCB3aGVuIEVsZWN0cm9uIGhhcyBmaW5pc2hlZAovLyBpbml0aWFsaXphdGlvbiBhbmQgaXMgcmVhZHkgdG8gY3JlYXRlIGJyb3dzZXIgd2luZG93cy4KYXBwLm9uKCdyZWFkeScsIGNyZWF0ZVdpbmRvdyk7CgovLyBRdWl0IHdoZW4gYWxsIHdpbmRvd3MgYXJlIGNsb3NlZC4KYXBwLm9uKCd3aW5kb3ctYWxsLWNsb3NlZCcsIGZ1bmN0aW9uICgpIHsKICAvLyBPbiBNYWNPUyBpdCBpcyBjb21tb24gZm9yIGFwcGxpY2F0aW9ucyBhbmQgdGhlaXIgbWVudSBiYXIKICAvLyB0byBzdGF5IGFjdGl2ZSB1bnRpbCB0aGUgdXNlciBxdWl0cyBleHBsaWNpdGx5IHdpdGggQ21kICsgUQogIGlmIChwcm9jZXNzLnBsYXRmb3JtICE9PSAnZGFyd2luJykgewogICAgYXBwLnF1aXQoKTsKICB9Cn0pOwoKYXBwLm9uKCJhY3RpdmF0ZSIsIGZ1bmN0aW9uICgpIHsKICBpZiAobWFpbldpbmRvdyA9PT0gbnVsbCkgewogICAgY3JlYXRlV2luZG93KCkKICB9Cn0pCgppcGNNYWluLm9uKCJzYXZlQXBwRGF0YSIsICgpID0+IHsKICB0cnkgewogICAgLy8gZWxlY3Ryb24gZG9lc24ndCBlc2NhcGUgLyBpbiB0aGUgcHJvZHVjdCBuYW1lCiAgICBmcy53cml0ZUZpbGVTeW5jKHBhdGguam9pbihhcHAuZ2V0UGF0aCgiYXBwRGF0YSIpLCAiVGVzdCBBcHAgw59XIiwgInRlc3RGaWxlIiksICJ0ZXN0IikKICB9CiAgY2F0Y2ggKGUpIHsKICAgIG1haW5XaW5kb3cud2ViQ29udGVudHMuZXhlY3V0ZUphdmFTY3JpcHQoYGNvbnNvbGUubG9nKFxgdXNlckRhdGE6ICR7ZX1cYClgKQogIH0KfSl7CiAgInByaXZhdGUiOiB0cnVlLAogICJuYW1lIjogIlRlc3RBcHAiLAogICJwcm9kdWN0TmFtZSI6ICJUZXN0IEFwcCDDn1ciLAogICJ2ZXJzaW9uIjogIjEuMS4wIiwKICAiaG9tZXBhZ2UiOiAiaHR0cDovL2Zvby5leGFtcGxlLmNvbSIsCiAgImRlc2NyaXB0aW9uIjogIlRlc3QgQXBwbGljYXRpb24gKHRlc3QgcXVpdGUgXCIgIzM3OCkiLAogICJhdXRob3IiOiAiRm9vIEJhciA8Zm9vQGV4YW1wbGUuY29tPiIsCiAgImxpY2Vuc2UiOiAiTUlUIgp9e317fVRlc3QgdGhhdCB3ZSBkb24ndCB0YWtlIGluIGFjY291bnQganVzdCBkaXJlY3RvcnkgYGFwcGAgd2l0aG91dCBgcGFja2FnZS5qc29uYElnbm9yZSBgcGFja2FnZS5qc29uYCBkaXJlY3Rvcnku"`;
